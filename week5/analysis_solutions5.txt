Problem 3: Chained Comparison Operators
Python:
a rop1 b rop2 c is equivalent to (a rop1 b) and (b rop2 c)
Example: 1 < 2 < 2 evaluates to False because (1 < 2) and (2 < 2) is False
C:
a rop1 b rop2 c is equivalent to (a rop1 b) rop2 c
Example: 1 < 2 < 2 evaluates to 1 because (1 < 2) < 2 becomes 1 < 2 which is 1

Problem 4: Floating Point Literals
Regular expression to grammar mapping:

[0-9] -> digit
[0-9]+ -> digit-sequence
([0-9]+)?.[0-9]+|[0-9]+. -> fractional-constant
eE?[0-9]+ -> exponent-part
[flFL] -> floating-suffix

EBNF vs Regular Expression:
EBNF pros: More readable, self-documenting, easier to modify
EBNF cons: More verbose, not directly implementable
Regex pros: Concise, directly implementable
Regex cons: Harder to read and maintain